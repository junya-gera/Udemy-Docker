・Dockerコンテナの実行

  $ docker run hello-world
    順にdockerコマンド、サブコマンド、イメージの指定
    runは次の3つを1度に実行
      docker pull   →イメージの取得
      docker create →コンテナの作成
      docker start  →コンテナの起動
    
    イメージ名の後に何も書かなければlatestのイメージがダウンロードされる
    明示的にタグを記述する場合はdocker run hello-world:latestのようにコロンの後に書く

  16.whalesayコンテナの実行とDockerイメージダウンロードの動作

    $ docker run docker/whalesay cowsay Hello!!
      イメージ名がdocker/whalesay
      cowsay Hello!!はdocker/whalesayのコンテナ内で呼び出すコマンド
      イメージ名の後にコマンドを続けることでコンテナが立ち上がった際に実行できる
      cowsayはクジラのAAに好きな言葉を喋らせるコマンド



  17.ローカル上のDockerイメージの管理
    $ docker images
      → ローカル上にダウンロード済みのイメージ一覧を表示するコマンド

      REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
      hello-world         latest              bf756fb1ae65        4 months ago        13.3kB
      docker/whalesay     latest              6b362a9f73eb        5 years ago         247MB
      
    $ docker tag docker/whalesay my_whalesay
      →tag タグ付けするサブコマンド。元のイメージ名、新しいイメージ名の順に書く
      → my_whalesayでdocker/whalesayと全く同じ意味になる

    $ docker tag docker/whalesay my_whalesay:ver1
      → 新しいイメージ名にver1というタグ名をつける

    $ docker inspect my_whalesay
      → inspect イメージの詳細情報を表示するサブコマンド
      → 後ろに対象のイメージ名かイメージIDをつける

    $ docker -f rmi docker/whalesay
      → rmi ローカル上のイメージを削除するサブコマンド
      → もしそのイメージを使用して作られたコンテナがある場合は、
        まずそのコンテナを先に削除するか、強制削除する-fを付ける

    $ docker pull docker/whalesay
      → イメージを取得するサブコマンド。削除してもこれで戻せる
      → ちなみにlatestタグのものが必ず最新とは限らないので、タグは明示的に
        つけたほうがいい



  18.Dockerfileを利用したイメージビルド方法の解説
    Dockerfileとは、コンテナの構成情報を定義したファイル。
    Dockerfileからイメージを構築することをイメージビルドという

    $ mkdir imagebuild
    $ cd imagebuild/
    $ vim dockerfile
    $ FROM docker/whalesay:latest
      → FROM イメージを作成する際に、元になるイメージを指定する命令
    
    $ RUN apt-get -y update && apt-get install -y fortunes
      → RUN イメージビルドの際に実行するコマンドを指定するための命令
      → apt-get パッケージを操作・管理するコマンド
      → install 指定したパッケージをインストール(今回はfortunes)

    $ CMD /usr/games/fortune | cowsay
      → CMD コンテナが作成された後に実行するコマンドを指定する命令

    $ docker build -t docker-whale .
      → build イメージをビルドするサブコマンド
      → -t docker-whale タグ名の指定(今回はdocker-whaleという名前を付ける)
      → . ビルドコンテキストの指定
      → ビルドコンテキスト イメージを作成する際にアクセスできるディレクトリやファイルの
        範囲を示すもの。今回はカレントディレクトリの.
        このファイルはまとめてDockerデーモンに送られる。ファイルサイズが大きい場合、
        転送に時間がかかるので、余計なファイルは消しておく
    